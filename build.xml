<?xml version="1.0" encoding="UTF-8"?>
<project name="registration_pacinet" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.6" value="${jdk.home.1.6}/bin"/>
  <path id="jdk.classpath.1.6">
    <fileset dir="${jdk.home.1.6}">
      <include name="lib/deploy.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javaws.jar"/>
      <include name="lib/jce.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/management-agent.jar"/>
      <include name="lib/plugin.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="../Classes/alt-rt.jar"/>
      <include name="../Classes/alt-string.jar"/>
      <include name="../Classes/charsets.jar"/>
      <include name="../Classes/classes.jar"/>
      <include name="../Classes/jsse.jar"/>
      <include name="../Classes/ui.jar"/>
      <include name="lib/ext/apple_provider.jar"/>
      <include name="lib/ext/dnsns.jar"/>
      <include name="lib/ext/localedata.jar"/>
      <include name="lib/ext/sunjce_provider.jar"/>
      <include name="lib/ext/sunpkcs11.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.6}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.6}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.6"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.hibernate.classpath">
    <fileset dir="${basedir}/../../Lib/hibernate-4.1.7/lib/required">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="library.jsf-2.0.1-fcs.classpath">
    <pathelement location="${basedir}/lib/jsf-api.jar"/>
    <pathelement location="${basedir}/lib/jsf-impl.jar"/>
    <pathelement location="${basedir}/lib/jstl-1.1.0.jar"/>
  </path>
  
  <path id="library.jsf/primefaces.classpath">
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="library.org.apache.poi:poi:3.8.classpath">
    <pathelement location="${basedir}/lib/commons-codec-1.5.jar"/>
    <pathelement location="${basedir}/lib/poi-3.8.jar"/>
  </path>
  
  <path id="library.servlet-api.classpath">
    <pathelement location="${basedir}/../../Lib/apache-tomcat-6.0.35/lib/servlet-api.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  
  
  <!-- Application Server Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module Registration -->
  
  <dirname property="module.registration.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.registration" value="${jdk.home.1.6}"/>
  <property name="module.jdk.bin.registration" value="${jdk.bin.1.6}"/>
  <property name="module.jdk.classpath.registration" value="jdk.classpath.1.6"/>
  
  <property name="compiler.args.registration" value="${compiler.args}"/>
  
  <property name="registration.output.dir" value="${module.registration.basedir}/out/production/Registration"/>
  <property name="registration.testoutput.dir" value="${module.registration.basedir}/out/test/Registration"/>
  
  <path id="registration.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="registration.module.production.classpath">
    <path refid="${module.jdk.classpath.registration}"/>
    <path refid="library.hibernate.classpath"/>
    <path refid="library.jsf-2.0.1-fcs.classpath"/>
    <path refid="library.jsf/primefaces.classpath"/>
    <path refid="library.servlet-api.classpath"/>
    <path refid="library.org.apache.poi:poi:3.8.classpath"/>
  </path>
  
  <path id="registration.runtime.production.module.classpath">
    <pathelement location="${registration.output.dir}"/>
    <path refid="library.hibernate.classpath"/>
    <path refid="library.jsf-2.0.1-fcs.classpath"/>
    <path refid="library.jsf/primefaces.classpath"/>
    <path refid="library.servlet-api.classpath"/>
    <path refid="library.org.apache.poi:poi:3.8.classpath"/>
  </path>
  
  <path id="registration.module.classpath">
    <path refid="${module.jdk.classpath.registration}"/>
    <pathelement location="${registration.output.dir}"/>
    <path refid="library.hibernate.classpath"/>
    <path refid="library.jsf-2.0.1-fcs.classpath"/>
    <path refid="library.jsf/primefaces.classpath"/>
    <path refid="library.servlet-api.classpath"/>
    <path refid="library.org.apache.poi:poi:3.8.classpath"/>
  </path>
  
  <path id="registration.runtime.module.classpath">
    <pathelement location="${registration.testoutput.dir}"/>
    <pathelement location="${registration.output.dir}"/>
    <path refid="library.hibernate.classpath"/>
    <path refid="library.jsf-2.0.1-fcs.classpath"/>
    <path refid="library.jsf/primefaces.classpath"/>
    <path refid="library.servlet-api.classpath"/>
    <path refid="library.org.apache.poi:poi:3.8.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.registration">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.registration">
    <patternset refid="excluded.from.module.registration"/>
  </patternset>
  
  <path id="registration.module.sourcepath">
    <dirset dir="${module.registration.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.registration" depends="compile.module.registration.production,compile.module.registration.tests" description="Compile module Registration"/>
  
  <target name="compile.module.registration.production" description="Compile module Registration; production classes">
    <mkdir dir="${registration.output.dir}"/>
    <javac destdir="${registration.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.registration}/javac">
      <compilerarg line="${compiler.args.registration}"/>
      <bootclasspath refid="registration.module.bootclasspath"/>
      <classpath refid="registration.module.production.classpath"/>
      <src refid="registration.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.registration"/>
    </javac>
    
    <copy todir="${registration.output.dir}">
      <fileset dir="${module.registration.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.registration.tests" depends="compile.module.registration.production" description="compile module Registration; test classes" unless="skip.tests"/>
  
  <target name="clean.module.registration" description="cleanup module">
    <delete dir="${registration.output.dir}"/>
    <delete dir="${registration.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.registration, clean.artifact.registration:war_exploded" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.registration" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.registration:war" value="${basedir}/out/artifacts/Registration_war"/>
    <property name="artifact.output.registration:war_exploded" value="${basedir}/out/artifacts/Registration_war_exploded"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.Registration_war.war" value="${artifacts.temp.dir}/Registration_war.war"/>
  </target>
  
  <target name="clean.artifact.registration:war_exploded" description="clean Registration:war exploded artifact output">
    <delete dir="${artifact.output.registration:war_exploded}"/>
  </target>
  
  <target name="artifact.registration:war" depends="init.artifacts, artifact.registration:war_exploded" description="Build &#39;Registration:war&#39; artifact">
    <property name="artifact.temp.output.registration:war" value="${artifacts.temp.dir}/Registration_war"/>
    <mkdir dir="${artifact.temp.output.registration:war}"/>
    <zip destfile="${temp.jar.path.Registration_war.war}">
      <zipfileset dir="${artifact.output.registration:war_exploded}"/>
      <zipfileset file="${basedir}/lib/poi-3.8.jar" prefix="WEB-INF/lib"/>
      <zipfileset file="${basedir}/lib/commons-codec-1.5.jar" prefix="WEB-INF/lib"/>
    </zip>
    <copy file="${temp.jar.path.Registration_war.war}" tofile="${artifact.temp.output.registration:war}/Registration_war.war"/>
  </target>
  
  <target name="artifact.registration:war_exploded" depends="init.artifacts, compile.module.registration" description="Build &#39;Registration:war exploded&#39; artifact">
    <mkdir dir="${artifact.output.registration:war_exploded}"/>
    <copy todir="${artifact.output.registration:war_exploded}">
      <fileset dir="${basedir}/web"/>
    </copy>
    <mkdir dir="${artifact.output.registration:war_exploded}/WEB-INF"/>
    <copy file="${basedir}/web/WEB-INF/web.xml" tofile="${artifact.output.registration:war_exploded}/WEB-INF/web.xml"/>
    <mkdir dir="${artifact.output.registration:war_exploded}/WEB-INF"/>
    <mkdir dir="${artifact.output.registration:war_exploded}/WEB-INF/classes"/>
    <copy todir="${artifact.output.registration:war_exploded}/WEB-INF/classes">
      <fileset dir="${registration.output.dir}"/>
    </copy>
    <mkdir dir="${artifact.output.registration:war_exploded}/WEB-INF/lib"/>
    <copy file="${basedir}/../../Lib/hibernate-4.1.7/lib/required/antlr-2.7.7.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/antlr-2.7.7.jar"/>
    <copy file="${basedir}/../../Lib/hibernate-4.1.7/lib/required/dom4j-1.6.1.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/dom4j-1.6.1.jar"/>
    <copy file="${basedir}/../../Lib/hibernate-4.1.7/lib/required/hibernate-commons-annotations-4.0.1.Final.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/hibernate-commons-annotations-4.0.1.Final.jar"/>
    <copy file="${basedir}/../../Lib/hibernate-4.1.7/lib/required/hibernate-core-4.1.7.Final.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/hibernate-core-4.1.7.Final.jar"/>
    <copy file="${basedir}/../../Lib/hibernate-4.1.7/lib/required/hibernate-jpa-2.0-api-1.0.1.Final.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/hibernate-jpa-2.0-api-1.0.1.Final.jar"/>
    <copy file="${basedir}/../../Lib/hibernate-4.1.7/lib/required/javassist-3.15.0-GA.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/javassist-3.15.0-GA.jar"/>
    <copy file="${basedir}/../../Lib/hibernate-4.1.7/lib/required/jboss-logging-3.1.0.GA.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jboss-logging-3.1.0.GA.jar"/>
    <copy file="${basedir}/../../Lib/hibernate-4.1.7/lib/required/jboss-transaction-api_1.1_spec-1.0.0.Final.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jboss-transaction-api_1.1_spec-1.0.0.Final.jar"/>
    <copy file="${basedir}/lib/jsf-api.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jsf-api.jar"/>
    <copy file="${basedir}/lib/jsf-impl.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jsf-impl.jar"/>
    <copy file="${basedir}/lib/jstl-1.1.0.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jstl-1.1.0.jar"/>
    <copy file="${basedir}/lib/jsf-api.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jsf-api.jar"/>
    <copy file="${basedir}/lib/jsf-impl.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jsf-impl.jar"/>
    <copy file="${basedir}/lib/jstl-1.1.0.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jstl-1.1.0.jar"/>
    <copy file="${basedir}/lib/poi-3.8.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/poi-3.8.jar"/>
    <copy file="${basedir}/lib/commons-codec-1.5.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/commons-codec-1.5.jar"/>
    <copy file="${basedir}/lib/barbecue-1.5-beta1.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/barbecue-1.5-beta1.jar"/>
    <copy file="${basedir}/lib/black-tie-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/black-tie-1.0.4.jar"/>
    <copy file="${basedir}/lib/blitzer-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/blitzer-1.0.4.jar"/>
    <copy file="${basedir}/lib/bluesky-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/bluesky-1.0.4.jar"/>
    <copy file="${basedir}/lib/casablanca-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/casablanca-1.0.4.jar"/>
    <copy file="${basedir}/lib/commons-fileupload-1.2.1.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/commons-fileupload-1.2.1.jar"/>
    <copy file="${basedir}/lib/commons-io-1.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/commons-io-1.4.jar"/>
    <copy file="${basedir}/lib/commons-logging-1.1.1.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/commons-logging-1.1.1.jar"/>
    <copy file="${basedir}/lib/cupertino-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/cupertino-1.0.4.jar"/>
    <copy file="${basedir}/lib/dark-hive-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/dark-hive-1.0.4.jar"/>
    <copy file="${basedir}/lib/dot-luv-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/dot-luv-1.0.4.jar"/>
    <copy file="${basedir}/lib/eggplant-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/eggplant-1.0.4.jar"/>
    <copy file="${basedir}/lib/excite-bike-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/excite-bike-1.0.4.jar"/>
    <copy file="${basedir}/lib/flick-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/flick-1.0.4.jar"/>
    <copy file="${basedir}/lib/glass-x-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/glass-x-1.0.4.jar"/>
    <copy file="${basedir}/lib/home-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/home-1.0.4.jar"/>
    <copy file="${basedir}/lib/hot-sneaks-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/hot-sneaks-1.0.4.jar"/>
    <copy file="${basedir}/lib/humanity-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/humanity-1.0.4.jar"/>
    <copy file="${basedir}/lib/itext-2.1.7.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/itext-2.1.7.jar"/>
    <copy file="${basedir}/lib/javax.faces-2.1.7.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/javax.faces-2.1.7.jar"/>
    <copy file="${basedir}/lib/jcommon-1.0.0.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jcommon-1.0.0.jar"/>
    <copy file="${basedir}/lib/jdom-1.0.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jdom-1.0.jar"/>
    <copy file="${basedir}/lib/jfreechart-1.0.0.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/jfreechart-1.0.0.jar"/>
    <copy file="${basedir}/lib/le-frog-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/le-frog-1.0.4.jar"/>
    <copy file="${basedir}/lib/midnight-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/midnight-1.0.4.jar"/>
    <copy file="${basedir}/lib/mint-choc-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/mint-choc-1.0.4.jar"/>
    <copy file="${basedir}/lib/overcast-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/overcast-1.0.4.jar"/>
    <copy file="${basedir}/lib/pepper-grinder-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/pepper-grinder-1.0.4.jar"/>
    <copy file="${basedir}/lib/poi-3.7.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/poi-3.7.jar"/>
    <copy file="${basedir}/lib/postgresql-9.1-901.jdbc4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/postgresql-9.1-901.jdbc4.jar"/>
    <copy file="${basedir}/lib/primefaces-mobile-1.0.0-SNAPSHOT.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/primefaces-mobile-1.0.0-SNAPSHOT.jar"/>
    <copy file="${basedir}/lib/redmond-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/redmond-1.0.4.jar"/>
    <copy file="${basedir}/lib/rocket-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/rocket-1.0.4.jar"/>
    <copy file="${basedir}/lib/rome-1.0.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/rome-1.0.jar"/>
    <copy file="${basedir}/lib/sam-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/sam-1.0.4.jar"/>
    <copy file="${basedir}/lib/smoothness-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/smoothness-1.0.4.jar"/>
    <copy file="${basedir}/lib/south-street-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/south-street-1.0.4.jar"/>
    <copy file="${basedir}/lib/start-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/start-1.0.4.jar"/>
    <copy file="${basedir}/lib/sunny-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/sunny-1.0.4.jar"/>
    <copy file="${basedir}/lib/swanky-purse-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/swanky-purse-1.0.4.jar"/>
    <copy file="${basedir}/lib/trontastic-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/trontastic-1.0.4.jar"/>
    <copy file="${basedir}/lib/ui-darkness-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/ui-darkness-1.0.4.jar"/>
    <copy file="${basedir}/lib/ui-lightness-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/ui-lightness-1.0.4.jar"/>
    <copy file="${basedir}/lib/vader-1.0.4.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/vader-1.0.4.jar"/>
    <copy file="${basedir}/lib/primefaces-3.4.1.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/primefaces-3.4.1.jar"/>
    <copy file="${basedir}/lib/poi-3.8.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/poi-3.8.jar"/>
    <copy file="${basedir}/lib/commons-codec-1.5.jar" tofile="${artifact.output.registration:war_exploded}/WEB-INF/lib/commons-codec-1.5.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.registration:war, artifact.registration:war_exploded" description="Build all artifacts">
    <mkdir dir="${artifact.output.registration:war}"/>
    <copy todir="${artifact.output.registration:war}">
      <fileset dir="${artifact.temp.output.registration:war}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>